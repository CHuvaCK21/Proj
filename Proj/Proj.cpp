#include "Fn.h"
#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <string.h>

int main()
{
	setlocale(LC_ALL, ""); //Русский язык
	char a[32], b[32];// Объявление массивов типа char для заполнения 
	unsigned int ch[101] = { }, i = 0, sel, check, go = 0, count2[101]{}; // Объявление переменных

	printf("1 - Приветствие\n2 - Перевод десятичного числа в двоичное\nВыберите функцию: ");
	scanf_s("%d", &sel); //Ввод выбора функции
	if ( sel == 1 ) {
		printf("\nПривет");
	}

	if ( sel == 2 ) {
		printf("Введите неотрицательное десятичное число для перевода: \n"); // Вывод текста
		do { //Начало цикла
			scanf_s("%s", a, 32); //Ввод числа для перевода в двоичный код
			check = CheckStr(a, b, &ch[i]); //Присваивание переменной check значение возврата функции CheckStr

			if ( check != -1 ) { // Проверка на наличие ошибок
				if ( ch[i] == 10 ) { //Если знаков в числе 10, то проверяем на величину числа, а именно не больше ли оно чем 4294967295
					if ( checknumb(b) == 0 ) { //Если после проверки получили 0, то продолжаем дальше и выводим число 
						go = atoll(b); //char переводим в int
						cleanArr(b); //Очистка массива
						count2[i] = go; //Присваиваем элементу массива наше число, что было переведено в int в строке 24
						i++; //Счетчик для перехода по массиву count2 и для подсчета количества введенных чисел всего
					}
					else { //Если получили не нулевое возвращаемое значение, то выдаем ошибку
						printf("Число больше чем 4294967295, введите число заново\n");
						ch[i] = 0; //Обнуляем количество цифр, чтобы следующее число не продолжило прибавлять числа к этой же ячейке массива
						cleanArr(b); //Очистка массива
					}
				}
				else {
					go = atoll(b); //char переводим в int
					cleanArr(b); //Очистка массива
					count2[i] = go; //Присваиваем элементу массива наше число, что было переведено в int в строке 24
					i++; //Счетчик для перехода по массиву count2 и для подсчета количества введенных чисел всего
				}
			}
			else {
				printf("Чисел больше 10, либо вы ввели только символы или буквы, введите число заново.\n");
				cleanArr(b); //Очистка массива
			}
		} while ( a[0] != '0' && i <= 100 ); //Цикл будет действовать пока мы не введем 0
		Table(&i, count2, ch); //Функция выводы таблицы на экран с передачей 2 переменных
	}
	if ( sel == 3 ) {
		Book Rec[100] = {}; //Создание массива объекта нашей структуры
		unsigned int a = 0, c = 0; //Переменные для передвижения по массиву
		unsigned int ch[100] = {}, ch2[100] = {}; //Переменные для сохранения в них длины номера и имени
		do {
			a = c; //Приравниваем c к a, чтобы при переходе дальше цикл не заканчивался
			printf("Введите имя: "); //Запрос ввода имени
			scanf_s("%s", &Rec[a].Name, 39); //Ввод нашего имени в наш объект 
			ch2[c] = strlen(Rec[c].Name); //Подсчет количества символов в нашем имени и запись в массив ch2
			if ( NumberIn(Rec[a].tel, &ch[a]) == 0 ) { //Переход в функцию ввода номера телефона, с передачей ей массива ch, который будет использоваться для подсчета символов номера
				c++; //Прибавляем 1 к c, чтобы потом переменной a присвоить это число
			}
			else {
				a--; //Если чисел больше, то a уменьшаем на 1, чтобы программа не закрылась
			}
		} while ( Rec[a].tel.phone != 0 && c < 100); //Пока номер телефона введен не 0 или количество вводов не достигло 100
		TelTable(Rec, ch2, c); //Переход в функцию вывода телефонной книжки с передачей 3 переменных, массива нашего объекта, количество символов в номере и счетчик количества символов в принципе
	}
	return 0; //Возврат 0 в случае успешного завершения программы
}