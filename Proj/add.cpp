#include <stdio.h>
#include <string.h>
#include <stdlib.h>


int checknumb(char * b) {
	unsigned int ch5 = 0; //Объявление переменной для записи первых 9ти чисел числа в тип int

		for ( int i = 0; i < 9; i++ ) { //В цикле проходим до конца строки и записываем в нашу ch5 получившееся число без последнего десятка
			if ( *b != '\0' ) {
				ch5 = ch5 * 10 + ( *b - '0' );
				b++;
			}
		}

		if ( ch5 > 429496729 ) { //Сравниваем значение, если первые 9 знаков получившегося числа больше чем 429496729, то возвращаем -1
			return -1;
		}
		else if(ch5 == 429496729) { //Иначе если число меньше 429496729, то проверяем на равенство, если число равно, то проверяем последний десяток на то больше 5 он или нет
			if ( *b > '5' ) {
				return -1; //Возврат -1 если последний десяток больше 5
			}
			else { //Иначе возвращаем 0
				return 0;
			}
		}
		else { //Если число не равно 429496729, то автоматически возвращаем 0
			return 0;
		}
}

void cleanArr(char *a) { //Очищение массива
	for ( int i = 0; i < 32; i++ ) {
		*a = '\0';
		a++;
	}
}


void TrToBin(unsigned int a) { // Перевод в двоичное число
	unsigned int b, i = 0; //Инициализация беззнаковых переменных b и i, b - Наша маска, i - счетчик для цикла

	do{ // Начало цикла: делать это{}Пока(условие);
		b = 1 << (31 - i); // Сдвигаем каждую итерацию нашу маску на один бит вправо
		if (b & a) { // Логическая конъюнкция
			printf("1"); // Если логическое и равно 1, то пишем 1
		}
		else {
			printf("0"); // Когда логическое и равно 0, то пишем 0
		}
		i++; //Счетчик цикла, прибавляем каждую итерацию единицу

		if ( i % 4 == 0 ) {
			printf(" "); //Печать пробелов через каждые 4 знака
		}
	} while (i <= 31); // Пока i меньше или равен 31
}

void Table(unsigned int* count, unsigned int* count2, unsigned int *ch) {
	unsigned int cunt = 1; //Переменная для вывода порядкового номера числа
	printf("\t\t\t\t\t\t\t\t\t\t\t№\tЧисло\t\t\t Двоичный код\n"); //Заголовочный текст

	do { //Цикл do while
		printf("\t\t\t\t\t\t\t\t\t\t\t%d\t%lu", cunt, *count2); //Печать через табуляцию порядкового номера числа и само число
		for ( unsigned int i = 0; i < (24-*ch); i++ ) { //Уравнивание двоичного числа в таблице
			printf("."); //Печать точки для удобства
		}
		ch++; //Переход к следующему массиву с количеством цифр в числе
		TrToBin(*count2); //Вызов функции для перевода числа в двоичное, вывод числе происходит также в этой функции
		printf("\n"); //Переход на новую строку
		cunt++; //Операция для счета порядкового номера и использования в условие
		count2++; //Переход по массиву, в котором лежат числа, которые ввел пользователь
	} while ( *count2 != '\0' && cunt < *count ); //Пока мы не дойдем до конца массива с числами и пока не дойдем до конца количества чисел
}

int CheckStr(char  *a, char * b, unsigned int *ch) {
	do { //Начало цикла
		(*ch)++; //Каждую итерацию прибавляем 1
		if ( *a >= '0' && *a <= '9' ) { // Проверка, что в введенной строке только числа
			*b = *a; //Присваиваем ячейке массива b значение массива a если он является цифрой
			a++; //Переходим к следующей ячейке массива
			b++; //Переходим к следующей ячейке массива
		}
		else {
			a++; //Переходит к следующей ячейке массива
			(*ch)--; //Если условие не сработало, то  символ не засчитывается и количество чисел уменьшается
			//printf("В числе есть лишние символы, но мы их уже удалили!'\n");п
		}
	} while ( *a != '\0' );//Пока одна из ячеек массива не равна \0

	if ( *ch <= 10 && *ch > 0) { //Проверка на количество чисел в числе
		return 0;//Возврат 0 в случае если чисел требуемое количество
	}
	else {
		( *ch ) = 0; //Если чисел некорректное количество, то присваиваем переменной ch ноль, чтобы в следующих итерациях он не продолжался прибавляться
		return -1; //В случае если чисел больше, возвращаем -1
	}
}