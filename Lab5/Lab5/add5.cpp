#include "../../Proj/Fn.h"
#include <iostream>
#include <locale.h>

int Kniga::write2(unsigned int *c) {
	int f = 0; //Переменная для проверки на наличие ошибок при вводе номера телефона
	cout << "Введите имя: "; //Вывод на экран запроса вывода имени абонента
	cin >> name; //Команда ввода имени
	*c = size(name); //Количеством символов в имени для выравнивания в таблице
	if((f = write()) == -2) { //Приравниваем переменной f результат выполнения функции write(), если -2, значит номер телефона слишком длинный
		do{
			cout << "Вы ввели недопустимо длинный номер, введите имя абонента заново."<<endl; //Вывод сообщения, что длинный номер
			cin >> name; //Повторный запрос ввода имени
			*c = size(name); //Также повторная запись количества символов в переменную c
			f = write(); //Повторный вызов функции записи номера телефона с записью результата в f
		} while (f == -2); //Пока пользователь не введет номер телефона нужной длинны, будет требоваться ввести повторно имя абонента
	}else if (f == -1) { //Если функция вернула значение -1, то идет возврат -1, что означает, что пользователь ввел 0 в номере телефона
		return -1; // Возврат -1
	}
	else if (f == 0) { //Если функция вернула 0, значит все хорошо и можно продолжать ввод номеров телефонов
		return 0; //Возврат 0
	}
	return 0;
}

void Kniga::print(unsigned int *ch) {
	cout << name << " "; //Вывод имени
	for (unsigned int i = 0; i < (21 - *ch); i++) { //Выравнивание таблицы по количеству символов в имени
		cout << "."; //Печать точки для удобства
	}
	cout << (plus ? "+" : " "); //Вывод знака + или пробела если в plus записано 1 или 0
	cout << num << endl; //Вывод номера телефона
}

int Kniga::write() {
	char a[40] = {}, b[40] = {}; //Массив для записи номера телефона и второй массив для записи очищенного числа
	unsigned int c[100] = {}; //Массив для записи количества цифр в номере телефона
	cin.ignore(numeric_limits<streamsize>::max(), '\n'); //Очистка буфера ввода, была узнана путем поиска на просторах интернета
	cout << "Введите номер: "; //Запрос ввода номера
	cin.getline(a, 40); //Команда для ввода номера телефона
	if (a[0] == '0') { //Если первый символ 0, то возвращаем -1 
		return -1;
	}
	else if (a[0] == '+') { //Если первый символ +, то проверку строки начинаем со второго элемента массива 
		if (CheckStr(&a[1], b, c) == 0) { //Если функция проверки строки равна 0, то значит превышения количества символов в номере не было
			plus = 1; //Приравниваем переменной значение 1 т.к первым элементом был + 
			num = atoll(b); //Перевод в int нашего очищенного массива номера телефона
			return 0; //Возврат 0 т.к 
		}
		else {
			return -2; //Возврат -2 в случае если превышено количество символов
		}
	}
	else {
		if (CheckStr(a, b, c) == 0) { //Если первый символ не +, то проводим проверку строки с номером телефона с 1 элемента
			plus = 0; //Приравнивание 0 т.к символа плюс было не обнаружено
			num = atoll(b); //Перевод очищенного и проверенного числа в десятичный вид
			return 0; //Возврат 0
		}
		else {
			return -2; //Возврат -2 в случае если превышено количество символов
		}
	}
}